const Scene = require("node-vk-bot-api/lib/scene.js");
const Markup = require("node-vk-bot-api/lib/markup.js");

const log4js = require("log4js");
const logger = log4js.getLogger();
logger.level = "debug";

const db = require("../db.js");
const checkPayment = require("./checkPayment")

const admin = require('firebase-admin');

function randomInteger(min, max) {
    // –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç (min-0.5) –¥–æ (max+0.5)
    let rand = min - 0.5 + Math.random() * (max - min + 1);
    return Math.round(rand);
}


module.exports = new Scene("payment",
        ctx => {
            ctx.reply("üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 1 –¥–µ–Ω—å - 20 —Ä—É–±–ª–µ–π.\n" +
                "üâê –ü—Ä–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 1 –º–µ—Å—è—Ü –∏–ª–∏ –±–æ–ª—å—à–µ - —Å–∫–∏–¥–∫–∞ 30%\n\n" +
                "‚ùó –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –¥–Ω–µ–π –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è (–ù–∞–ø—Ä–∏–º–µ—Ä 35) ‚ùó", null, Markup.keyboard(["–û—Ç–º–µ–Ω–∞"]))
            ctx.scene.next()
        },
        async ctx => {
            if (ctx.message.body === "–û—Ç–º–µ–Ω–∞") ctx.scene.enter("index")
            else if (!isNaN(+ctx.message.body) && +ctx.message.body < 1000000) {
                const paymentData = await db.collection("settings").doc("payments").get().then(snap => snap.data())
                const amount = Math.floor(+ctx.message.body)
                const sum = Math.floor(amount < paymentData.discountSince ?
                    amount * paymentData.pricePerDay :
                    amount * paymentData.pricePerDay * 0.7)

                ctx.session.amount = amount;
                ctx.session.sum = sum;

                ctx.reply(`üîÆ –í—ã –ø—Ä–æ–¥–ª—è–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ ${ctx.session.amount} –¥–Ω–µ–π.\nüíµ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${sum}‚ÇΩ \n\n–í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?`,
                    null,
                    Markup.keyboard([Markup.button("–ö –æ–ø–ª–∞—Ç–µ", "positive"), Markup.button("–û—Ç–º–µ–Ω–∞")]))

                ctx.scene.next()
            } else ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ")
        },
        ctx => {
            ctx.session.comment = randomInteger(100000, 999999)
            if (ctx.message.body === "–û—Ç–º–µ–Ω–∞") ctx.scene.enter("index")
            else if (ctx.message.body === "–ö –æ–ø–ª–∞—Ç–µ") {
                ctx.reply(`
üè∑ –ü—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ ${ctx.session.amount} –¥–Ω–µ–π
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–ø–ª–∞—Ç—ã: https://qiwi.com/payment/form/99?extra%5B%27account%27%5D=${process.env.QIWI_NUMBER}&currency=643&comment=${ctx.session.comment}&amountInteger=${ctx.session.sum}&amountFraction=0&blocked%5B0%5D=account&blocked%5B1%5D=comment
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
ü•ù –ö–æ—à–µ–ª–µ–∫: ${process.env.QIWI_NUMBER}
üí∞ –°—É–º–º–∞: ${ctx.session.sum} ‚ÇΩ
üìù –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –≤ QIWI: ${ctx.session.comment}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ`, null, Markup.keyboard([Markup.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", "positive"), Markup.button("–û—Ç–º–µ–Ω–∞")]))
                ctx.scene.next()
            }
            else ctx.reply("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É")
        },
        async ctx => {
            if(ctx.message.body === "–û—Ç–º–µ–Ω–∞") ctx.scene.enter("index")
            else if(ctx.message.body === "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É") {
                const checked = await checkPayment(ctx.session.comment, ctx.session.sum)
                if(checked) {
                    await db.collection("users")
                        .doc(ctx.message.user_id.toString())
                        .update({
                            days: admin.firestore.FieldValue.increment(+ctx.session.amount)
                        })
                    ctx.reply("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –≤–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞.")
                    ctx.scene.enter("index")
                } else {
                    ctx.reply("‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–∏—à–ª–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
                }
            }
            else ctx.reply("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É")
        })
